@page "/"
@inherits AppPage
<Layout Sider>
    <LayoutSider>
        <div class="authors">
            <span>Authors</span>
            @foreach (var authorName in Data.Select(t => t.AudioBookInfo.AuthorName).Distinct().OrderBy(t => t))
            {
                <a class="authorLink" onclick="@($"document.getElementById('{authorName.Replace(" ", "")}').scrollIntoView({{behavior:'smooth'}})")">
                    <div>@authorName</div></a>
            }
        </div>
    </LayoutSider>
    <LayoutContent>
        <div class="header">
            <div class="stat"> Titles: <Icon Name="IconName.Book" /> @AudioBooksStatistics?.TotalCount</div>
            <div class="stat"> Authors: <Icon Name="IconName.Users" />@AudioBooksStatistics?.AuthorCount</div>
            <div class="stat">Duration: <Icon Name="IconName.Clock" />@($"{AudioBooksStatistics?.TotalDuration.TotalDays:F0}days {AudioBooksStatistics?.TotalDuration.Hours} hours")</div>
            <Field >
                <TextEdit Placeholder="Search" TextChanged="SearchTextChanged"/>
            </Field>
        </div>

        @foreach (var author in Data.GroupBy(t => t.AudioBookInfo.AuthorName).OrderBy(t => t.Key))
        {
            <a id="@author.Key.Replace(" ", "")">
            </a>
            <Divider DividerType="DividerType.TextContent" Text="@author.Key"></Divider>
            @foreach (var series in author.GroupBy(info => info.AudioBookInfo.SeriesName?.ToLower().Trim()))
            {
                @if (!string.IsNullOrWhiteSpace(series.Key))
                {
                    <div class="seriesDivider">@series.Key</div>
                }
                <div class="c-container">

                    @foreach (var audioBook in series.OrderBy(info => info.AudioBookInfo.OrderInSeries).ThenBy(info => info.AudioBookInfo.Name))
                    {
                        <div class="c-card">
                            <div class="c-card-header">
                                <img src="@audioBook.AudioBookInfo.ImageUrl" />
                            </div>
                            <div class="c-card-body">

                                <h3>@audioBook.AudioBookInfo.Name</h3>
                                <div id="categories">
                                    @foreach (var category in audioBook.AudioBookInfo.Categories)
                                    {
                                        <Badge Color="Color.Info">@category.Name</Badge>
                                    }
                                </div>
                                <div class="user">
                                    <b>@author.Key</b>
                                </div>
                                @if (!string.IsNullOrWhiteSpace(audioBook.AudioBookInfo.SeriesName))
                                {
                                    <b>@audioBook.AudioBookInfo.SeriesName - @audioBook.AudioBookInfo.OrderInSeries</b>
                                }

                                <p class="description" title="@audioBook.AudioBookInfo.Description">
                                    @audioBook.AudioBookInfo.Description
                                </p>
                                <div>
                                    <Rating ReadOnly="true" SelectedValue="@((int)Math.Round(audioBook.Rating / 20.0))"/> <span>@audioBook.Rating %</span>
                                </div>
                            </div>
                            <div class="c-card-footer">
                                <span>
                                    <Icon Name="IconName.Clock" /> @($"{audioBook.AudioBookInfo.Duration.TotalHours:F0}:{audioBook.AudioBookInfo.Duration.Minutes:D2}")
                                </span>
                                @if (!string.IsNullOrWhiteSpace(audioBook.AudioBookInfo.ArchiveUrl))
                                {
                                    <Button class="button" Clicked="async () => await Download(audioBook)">
                                        <Icon Name="IconName.Download"></Icon>
                                    </Button>
                                }

                                <Button Clicked="async () => await CopyRssAsync(audioBook)">
                                    <Icon Name="IconName.Rss"></Icon>
                                </Button>

                                <a class="button" href="@($"AudioBook/{audioBook.Id}/edit")">
                                    <Icon Name="IconName.Pen"></Icon>
                                </a>
                            </div>
                        </div>
                    }
                </div>

            }
        }
        <script>
            function copyToClipboard(link) {
                navigator.clipboard.writeText(link).then(() => {
                    alert("Link copied to clipboard!");
                }).catch(err => {
                    window.open(link,'_blank');
                    console.error("Failed to copy link: ", err);
                });
            }
        </script>
    </LayoutContent>
</Layout>
